name: Deploy

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - 'scripts/**'
      - 'workflows/build.yml'
  pull_request:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - 'scripts/**'
      - 'workflows/build.yml'
  release:
    types: [created]

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade build

    - name: Build a binary wheel and a source tarball
      run: |
        python -m build
    
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

# UNCOMMENT FOR UPLOAD TO TESTPYPI AND PYPI
# Link to the documentation: https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    # if: github.event_name == 'release' && success()
    environment:
      name: testpypi
      url: https://test.pypi.org/p/omnipose_ci
    permissions:
      id-token: write  # mandatory for trusted publishing

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools setuptools_scm
    - name: Create Git Tag
      # env:
      #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git tag
    - name: Publish distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  # publish-to-pypi:
  #   name: Publish to PyPI
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'release' && success()
  #   environment:
  #     name: pypi
  #     url: https://pypi.org/p/pomnipose_ci
  #   permissions:
  #     id-token: write  # mandatory for trusted publishing
    
  #   steps:
  #   - name: Download artifacts
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: python-package-distributions
  #       path: dist/
  #   - name: Publish distribution to PyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1